/*
 * ComicDB - overview you comics
 *
 * Copyright (C) 2005-2007 Daniel Moos
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
 */

package de.comicdb.util.calendar;

import de.comicdb.comicdbcore.util.DateUtil;
import java.awt.Frame;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.awt.event.WindowEvent;
import java.awt.event.WindowListener;
import java.util.Date;
import javax.swing.JDialog;
import javax.swing.JFrame;

/**
 *
 * @author  <a href="mailto:Daniel.Moos@link-up.de">Daniel Moos</a>
 */
public class CalendarDialog extends JDialog {
    
    private Date date = DateUtil.getNewDate();
    private int closeOption = -1;
    
    public static final int BUTTON_OK = 0;
    public static final int BUTTON_CANCEL = 1;
    /** Creates new form CalendarDialog */
    public CalendarDialog(Frame parent, boolean modal) {
        super(parent, modal);
        
        initComponents();
        
        addWindowListener(new WindowListener() {
            public void windowOpened(WindowEvent evt) {
                //ignore
            }
            public void windowClosing(WindowEvent evt) {
                closeOption = BUTTON_CANCEL;
                setVisible(false);
            }
            public void windowClosed(WindowEvent evt) {
                //ignore
            }
            public void windowIconified(WindowEvent evt) {
                //ignore
            }
            public void windowDeiconified(WindowEvent evt) {
                //ignore
            }
            public void windowActivated(WindowEvent evt) {
                //ignore
            }
            public void windowDeactivated(WindowEvent evt) {
                //ignore
            }

        });
        
        ((CalendarPanel)jPanel1).addTableMouseListener(new MouseAdapter() {
            public void mouseClicked(MouseEvent evt) {
                if (evt.getClickCount() >= 2) {
                    setVisible(false);
                    closeOption = BUTTON_OK;
                }
            }
        });
        
        ((CalendarPanel)jPanel1).addKeyListener(new KeyAdapter() {
            public void keyReleased(KeyEvent evt) {
                //ignore
            }
            public void keyPressed(KeyEvent evt) {
                if (evt.getKeyCode() == KeyEvent.VK_ESCAPE) {
                    setVisible(false);
                    closeOption = BUTTON_CANCEL;
                }
            }
            public void keyTyped(KeyEvent evt) {
                //ignore
            }
        });
    }
    
    public CalendarDialog(Frame parent, boolean modal, Date startDate) {
        this(parent, modal);
        setDate(startDate);
    }
    
    public void setDate(Date date) {
        CalendarPanel panel = (CalendarPanel)jPanel1;
        panel.setDate(date);        
    }
    
    public Date getDate() {
        CalendarPanel panel = (CalendarPanel)jPanel1;
        return panel.getDate();
    }
    
    public int getCloseOption() {
        return closeOption;
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jPanel1 = new CalendarPanel();
        jPanel2 = new javax.swing.JPanel();
        jButtonOK = new javax.swing.JButton();
        jButtonCancel = new javax.swing.JButton();

        getContentPane().setLayout(new java.awt.GridBagLayout());

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setResizable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        getContentPane().add(jPanel1, gridBagConstraints);

        jButtonOK.setText(java.util.ResourceBundle.getBundle("de/comicdb/comicdbcore/Bundle").getString("BUTTON.OK"));
        jButtonOK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonOKActionPerformed(evt);
            }
        });
        jButtonOK.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jButtonOKKeyPressed(evt);
            }
        });

        jPanel2.add(jButtonOK);

        jButtonCancel.setText(java.util.ResourceBundle.getBundle("de/comicdb/comicdbcore/Bundle").getString("BUTTON.CANCEL"));
        jButtonCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCancelActionPerformed(evt);
            }
        });
        jButtonCancel.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jButtonCancelKeyPressed(evt);
            }
        });

        jPanel2.add(jButtonCancel);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        getContentPane().add(jPanel2, gridBagConstraints);

        java.awt.Dimension screenSize = java.awt.Toolkit.getDefaultToolkit().getScreenSize();
        setBounds((screenSize.width-420)/2, (screenSize.height-235)/2, 420, 235);
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonCancelKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jButtonCancelKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ESCAPE) {
            setVisible(false);
            closeOption = BUTTON_CANCEL;
        }
    }//GEN-LAST:event_jButtonCancelKeyPressed

    private void jButtonOKKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jButtonOKKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ESCAPE) {
            setVisible(false);
            closeOption = BUTTON_CANCEL;
        }
    }//GEN-LAST:event_jButtonOKKeyPressed

    private void jButtonCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCancelActionPerformed
        setVisible(false);
        closeOption = BUTTON_CANCEL;
    }//GEN-LAST:event_jButtonCancelActionPerformed

    private void jButtonOKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonOKActionPerformed
        this.setVisible(false);
        closeOption = BUTTON_OK;
    }//GEN-LAST:event_jButtonOKActionPerformed
    
    public static void main(String[] args) {
        CalendarDialog dia = new CalendarDialog(new JFrame(), true);
        dia.setVisible(true);
        dia.dispose();
            
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonCancel;
    private javax.swing.JButton jButtonOK;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    // End of variables declaration//GEN-END:variables
    
}
